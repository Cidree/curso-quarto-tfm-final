{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2
    ],
    "data": [
        "\nR version 4.4.1 (2024-06-14 ucrt) -- \"Race for Your Life\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64\n\nR es un software libre y viene sin GARANTIA ALGUNA.\nUsted puede redistribuirlo bajo ciertas circunstancias.\nEscriba 'license()' o 'licence()' para detalles de distribucion.\n\nR es un proyecto colaborativo con muchos contribuyentes.\nEscriba 'contributors()' para obtener más información y\n'citation()' para saber cómo citar R o paquetes de R en publicacion",
        "es.\n\nEscriba 'demo()' para demostraciones, 'help()' para el sistema on-line de ayuda,\no 'help.start()' para abrir el sistema de ayuda HTML con su navegador.\nEscriba 'q()' para salir de R.\n\n",
        "> ",
        "#| include: false",
        "> ",
        "## Instalar pacman si no esta instalado",
        "> ",
        "if (!require(pacman)) install.packages(\"pacman\")",
        "Cargando paquete requerido: pacman\n",
        "> ",
        "> ",
        "## Cargar pacman",
        "> ",
        "library(pacman)",
        "> ",
        "> ",
        "## Instalar y cargar el resto de paquetes",
        "> ",
        "p_load(",
        "+ ",
        "  ggplot2, ggthemes, RColorBrewer, rnaturalearth, rnaturalearthdata, sf, terra, tidyquant, tidyterra",
        "+ ",
        ")",
        "> ",
        "# 1. Leer países del mundo ------------",
        "> ",
        "wrld_sf <- ne_countries(scale = 50, returnclass = \"sf\")",
        "> ",
        "> ",
        "# 2. Area de estudio ------------------",
        "> ",
        "roi_sf <- read_sf(\"00_datos/Study_area.shp\") |> ",
        "+ ",
        "  st_transform(crs = 4326)",
        "> ",
        "> ",
        "# 3. Clases Koppen --------------------",
        "> ",
        "koppen_sr <- rast(\"00_datos/Beck_KG_V1_present_0p083.tif\") |> ",
        "+ ",
        "  crop(roi_sf, mask = TRUE)",
        "> ",
        "> ",
        "# 4. Reclasificar Koppen --------------",
        "> ",
        "> ",
        "## Matriz de reclasificación",
        "> ",
        "mat <- matrix(",
        "+ ",
        "  c(",
        "+ ",
        "    4, 5, 1,",
        "+ ",
        "    6, 7, 2,",
        "+ ",
        "    8, 8, 3,",
        "+ ",
        "    9, 9, 4,",
        "+ ",
        "    14, 14, 5,",
        "+ ",
        "    15, 16, 6,",
        "+ ",
        "    18, 19, 7,",
        "+ ",
        "    26, 26, 8,",
        "+ ",
        "    27, 27, 9,",
        "+ ",
        "    29, 29, 10",
        "+ ",
        "  ),",
        "+ ",
        "  ncol = 3,",
        "+ ",
        "  byrow = T",
        "+ ",
        ")",
        "> ",
        "> ",
        "## Reclasificar valores y convertir a categórico",
        "> ",
        "koppen_class_sr <- classify(koppen_sr, rcl = mat, right = NA) |> ",
        "+ ",
        "  as.factor()",
        "> ",
        "> ",
        "## Eliminar primer nivel (innecesario)",
        "> ",
        "koppen_class_sr <- droplevels(koppen_class_sr, level = '0')",
        "> ",
        "> ",
        "## Generar etiquetas para la visualización",
        "> ",
        "levels(koppen_class_sr)[[1]][2] <- c(",
        "+ ",
        "  \"Arid, Desert\",",
        "+ ",
        "  \"Arid, Steppe\",",
        "+ ",
        "  \"Temperate, dry summer, hot summer\",",
        "+ ",
        "  \"Temperate, dry summer, warm summer\",",
        "+ ",
        "  \"Temperate, no dry season, warm-hot summer\",",
        "+ ",
        "  \"Temperate, no dry season, warm summer\",",
        "+ ",
        "  \"Cold, dry summer, warm summer\",",
        "+ ",
        "  \"Cold, no dry season, warm summer\",",
        "+ ",
        "  \"Cold, no dry season, cold summer\",",
        "+ ",
        "  \"Polar, trundra\"",
        "+ ",
        ")",
        "> ",
        "#| fig-cap: \"Clasificación de las regiones climáticas del área de estudio (Francia, Italia, Portugal y España). Clima promedio de 1980-2016, basado en la clasificación de Köppen-Geiger.\"",
        "> ",
        "#| label: fig-area-estudio",
        "> ",
        "#| fig-width: 10",
        "> ",
        "#| fig-height: 8",
        "> ",
        "ggplot() +",
        "+ ",
        "  geom_sf(data = wrld_sf, fill = 'grey80') +",
        "+ ",
        "  geom_spatraster(data = koppen_class_sr, na.rm = T) +",
        "+ ",
        "  geom_sf(data = roi_sf, fill = NA, show.legend = FALSE) +",
        "+ ",
        "  geom_sf_text(",
        "+ ",
        "    data = roi_sf, ",
        "+ ",
        "    aes(label = NAME_ENGL), ",
        "+ ",
        "    family = 'serif', ",
        "+ ",
        "    size = 5, ",
        "+ ",
        "    col = 'grey40'",
        "+ ",
        "  ) +",
        "+ ",
        "  labs(x = '', y = '', fill = '') +",
        "+ ",
        "  coord_sf(",
        "+ ",
        "    xlim = st_bbox(roi_sf)[c(1,3)],",
        "+ ",
        "    ylim = st_bbox(roi_sf)[c(2,4)]",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_pander() + ",
        "+ ",
        "  theme(legend.position = 'bottom',",
        "+ ",
        "        axis.text.x     = element_text(family = 'serif'), ",
        "+ ",
        "        axis.text.y     = element_text(hjust = 0.5, family = 'serif'),",
        "+ ",
        "        axis.title.x    = element_text(family = 'serif')) +",
        "+ ",
        "  guides(fill = guide_legend(ncol = 2)) +",
        "+ ",
        "  scale_fill_manual(",
        "+ ",
        "    values = c(",
        "+ ",
        "      \"#41173A\",\"#C3A3BE\", \"#E8D9B9\", \"#FCAE2B\", \"#90BE6D\",",
        "+ ",
        "      \"#C6D5E9\", \"#A8DADC\", \"#457B9D\", \"#6D6875\", \"#1D3557\"",
        "+ ",
        "    ),",
        "+ ",
        "    na.translate = FALSE",
        "+ ",
        "  ) ",
        "Registered S3 method overwritten by 'data.table':\n  method           from\n  print.data.table     \nAviso en st_point_on_surface.sfc(sf::st_zm(x)) :\n  st_point_on_surface may not give correct results for longitude/latitude data\n",
        "> ",
        "#| fig-cap: \"Clasificación de las regiones climáticas del área de estudio (Francia, Italia, Portugal y España). Clima promedio de 1980-2016, basado en la clasificación de Köppen-Geiger.\"",
        "> ",
        "#| label: fig-area-estudio",
        "> ",
        "#| fig-width: 10",
        "> ",
        "#| fig-height: 8",
        "> ",
        "ggplot() +",
        "+ ",
        "  geom_sf(data = wrld_sf, fill = 'grey80') +",
        "+ ",
        "  geom_spatraster(data = koppen_class_sr, na.rm = T) +",
        "+ ",
        "  geom_sf(data = roi_sf, fill = NA, show.legend = FALSE) +",
        "+ ",
        "  geom_sf_text(",
        "+ ",
        "    data = roi_sf, ",
        "+ ",
        "    aes(label = NAME_ENGL), ",
        "+ ",
        "    family = 'serif', ",
        "+ ",
        "    size = 5, ",
        "+ ",
        "    col = 'grey40'",
        "+ ",
        "  ) +",
        "+ ",
        "  labs(x = '', y = '', fill = '') +",
        "+ ",
        "  coord_sf(",
        "+ ",
        "    xlim = st_bbox(roi_sf)[c(1,3)],",
        "+ ",
        "    ylim = st_bbox(roi_sf)[c(2,4)]",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_pander() + ",
        "+ ",
        "  theme(legend.position = 'bottom',",
        "+ ",
        "        axis.text.x     = element_text(family = 'serif'), ",
        "+ ",
        "        axis.text.y     = element_text(hjust = 0.5, family = 'serif'),",
        "+ ",
        "        axis.title.x    = element_text(family = 'serif')) +",
        "+ ",
        "  guides(fill = guide_legend(ncol = 2)) +",
        "+ ",
        "  scale_fill_manual(",
        "+ ",
        "    values = c(",
        "+ ",
        "      \"#41173A\",\"#C3A3BE\", \"#E8D9B9\", \"#FCAE2B\", \"#90BE6D\",",
        "+ ",
        "      \"#C6D5E9\", \"#A8DADC\", \"#457B9D\", \"#6D6875\", \"#1D3557\"",
        "+ ",
        "    ),",
        "+ ",
        "    na.translate = FALSE",
        "+ ",
        "  ) ",
        "Aviso:\nIn st_point_on_surface.sfc(sf::st_zm(x)) :\n  st_point_on_surface may not give correct results for longitude/latitude data\n",
        "\nRestarting R session...\n\n",
        "\nRestarting R session...\n\n",
        "\nRestarting R session...\n\n"
    ]
}